import discord
from features.video_data import VIDEOS
from config import TARGET_CHANNEL_ID

def menu_cmd(bot):
    class MenuView(discord.ui.View):
        def __init__(self, ctx):
            super().__init__(timeout=60)
            self.ctx = ctx
            self.used = False
            for title in VIDEOS.keys():
                self.add_item(MenuButton(title, ctx, self))

    class MenuButton(discord.ui.Button):
        def __init__(self, title, ctx, view):
            super().__init__(label=title, style=discord.ButtonStyle.primary)
            self.title = title
            self.ctx = ctx
            self.parent_view = view

        async def callback(self, interaction: discord.Interaction):
            if interaction.user.id != self.ctx.author.id:
                await interaction.response.send_message(
                    f"‚ùå ‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö **{self.ctx.author.display_name}** ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
                return
            if self.parent_view.used:
                await interaction.response.send_message("‚ö†Ô∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß", ephemeral=True)
                return

            self.parent_view.used = True
            await interaction.response.defer()
            await self.ctx.invoke(bot.get_command("‡∏™‡πà‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ"), title=self.title)

            for child in self.parent_view.children:
                if isinstance(child, discord.ui.Button):
                    child.disabled = True
            await interaction.message.edit(view=self.parent_view)
            self.parent_view.stop()

    async def cmd(ctx):
        if ctx.channel.id != TARGET_CHANNEL_ID:
            await ctx.send("‚ùå ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î")
            return
        await ctx.send("üìã ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á:", view=MenuView(ctx))

    return cmd
